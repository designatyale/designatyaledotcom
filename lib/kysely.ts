/*
 * kysely.ts
 * Author: Evan Kirkiles
 * Created On Thu Nov 16 2023
 * 2023 Design at Yale
 */

import { Generated, ColumnType } from 'kysely';
import { createKysely } from '@vercel/postgres-kysely';

interface SketchesTable {
  // Columns that are generated by the database should be marked
  // using the `Generated` type. This way they are automatically
  // made optional in inserts and updates.
  id: Generated<number>;
  name: string;
  email: string;
  image: string;

  // You can specify a different type for each operation (select, insert and
  // update) using the `ColumnType<SelectType, InsertType, UpdateType>`
  // wrapper. Here we define a column `createdAt` that is selected as
  // a `Date`, can optionally be provided as a `string` in inserts and
  // can never be updated:
  createdAt: ColumnType<Date, string | undefined, never>;
}

interface PromptTable {
  // Columns that are generated by the database should be marked
  // using the `Generated` type. This way they are automatically
  // made optional in inserts and updates.
  id: Generated<number>;
  prompt: string;
  email: string;
  image: string;
}

// Keys of this interface are table names.
export interface Database {
  sketches: SketchesTable;
  prompts: PromptTable;
}

export const db = createKysely<Database>();
export { sql } from 'kysely';
