/*
 * kysely.ts
 * Author: Evan Kirkiles
 * Created On Thu Nov 16 2023
 * 2023 Design at Yale
 */

import { Generated, ColumnType, Selectable, Insertable } from 'kysely';
import { createKysely } from '@vercel/postgres-kysely';

/* -------------------------------- Sketches -------------------------------- */

interface SketchesTable {
  // Columns that are generated by the database should be marked
  // using the `Generated` type. This way they are automatically
  // made optional in inserts and updates.
  id: Generated<number>;
  name: string;
  email: string;

  // location of image in vercel blob storage
  image_pathname: string;
  image_url: string;

  // dimensions of the sketch
  width: number;
  height: number;

  // was the sketch done in dark mode?
  dark_mode: boolean;

  // prompt id referring to the Sanity prompt this was generated under
  prompt_id: string;

  // is the sketch favorited?
  favorited: ColumnType<boolean, never, boolean | undefined>;

  // You can specify a different type for each operation (select, insert and
  // update) using the `ColumnType<SelectType, InsertType, UpdateType>`
  // wrapper. Here we define a column `createdAt` that is selected as
  // a `Date`, can optionally be provided as a `string` in inserts and
  // can never be updated:
  createdAt: ColumnType<Date, string | undefined, never>;
}

export type Sketch = Selectable<SketchesTable>;
export type NewSketch = Insertable<SketchesTable>;

// Keys of this interface are table names.
export interface Database {
  sketches: SketchesTable;
}

export const db = createKysely<Database>();
export { sql } from 'kysely';

Object.defineProperty(
  db.getExecutor().adapter,
  'supportsTransactionalDdl',
  () => false
);
